// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#include "GameMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class GameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMessage>
      _instance;
} _GameMessage_default_instance_;
class GridPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GridPoint>
      _instance;
} _GridPoint_default_instance_;
class GridPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GridPath>
      _instance;
} _GridPath_default_instance_;
class GameMessageSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMessageSet>
      _instance;
} _GameMessageSet_default_instance_;
namespace protobuf_GameMessage_2eproto {
void InitDefaultsGameMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsGridPath();
  {
    void* ptr = &::_GameMessage_default_instance_;
    new (ptr) ::GameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::InitAsDefaultInstance();
}

void InitDefaultsGameMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMessageImpl);
}

void InitDefaultsGridPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GridPoint_default_instance_;
    new (ptr) ::GridPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GridPoint::InitAsDefaultInstance();
}

void InitDefaultsGridPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGridPointImpl);
}

void InitDefaultsGridPathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsGridPoint();
  {
    void* ptr = &::_GridPath_default_instance_;
    new (ptr) ::GridPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GridPath::InitAsDefaultInstance();
}

void InitDefaultsGridPath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGridPathImpl);
}

void InitDefaultsGameMessageSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsGameMessage();
  {
    void* ptr = &::_GameMessageSet_default_instance_;
    new (ptr) ::GameMessageSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessageSet::InitAsDefaultInstance();
}

void InitDefaultsGameMessageSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMessageSetImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, cmd_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, grid_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPath, grid_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessageSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessageSet, game_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GameMessage)},
  { 12, -1, sizeof(::GridPoint)},
  { 19, -1, sizeof(::GridPath)},
  { 25, -1, sizeof(::GameMessageSet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GridPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GridPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameMessageSet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GameMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021GameMessage.proto\"\312\001\n\013GameMessage\022&\n\010c"
      "md_code\030\001 \001(\0162\024.GameMessage.CmdCode\022\016\n\006u"
      "nit_0\030\002 \001(\005\022\016\n\006unit_1\030\003 \001(\005\022\016\n\006damage\030\004 "
      "\001(\005\022\034\n\tgrid_path\030\005 \001(\0132\t.GridPath\022\014\n\004cam"
      "p\030\006 \001(\005\022\021\n\tunit_type\030\007 \001(\005\"$\n\007CmdCode\022\007\n"
      "\003CRT\020\000\022\007\n\003MOV\020\001\022\007\n\003ATK\020\002\"!\n\tGridPoint\022\t\n"
      "\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"*\n\010GridPath\022\036\n\ngrid_"
      "point\030\001 \003(\0132\n.GridPoint\"4\n\016GameMessageSe"
      "t\022\"\n\014game_message\030\001 \003(\0132\014.GameMessageb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameMessage_2eproto
const ::google::protobuf::EnumDescriptor* GameMessage_CmdCode_descriptor() {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GameMessage_2eproto::file_level_enum_descriptors[0];
}
bool GameMessage_CmdCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameMessage_CmdCode GameMessage::CRT;
const GameMessage_CmdCode GameMessage::MOV;
const GameMessage_CmdCode GameMessage::ATK;
const GameMessage_CmdCode GameMessage::CmdCode_MIN;
const GameMessage_CmdCode GameMessage::CmdCode_MAX;
const int GameMessage::CmdCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GameMessage::InitAsDefaultInstance() {
  ::_GameMessage_default_instance_._instance.get_mutable()->grid_path_ = const_cast< ::GridPath*>(
      ::GridPath::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessage::kCmdCodeFieldNumber;
const int GameMessage::kUnit0FieldNumber;
const int GameMessage::kUnit1FieldNumber;
const int GameMessage::kDamageFieldNumber;
const int GameMessage::kGridPathFieldNumber;
const int GameMessage::kCampFieldNumber;
const int GameMessage::kUnitTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessage::GameMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsGameMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage)
}
GameMessage::GameMessage(const GameMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_grid_path()) {
    grid_path_ = new ::GridPath(*from.grid_path_);
  } else {
    grid_path_ = NULL;
  }
  ::memcpy(&cmd_code_, &from.cmd_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_type_) -
    reinterpret_cast<char*>(&cmd_code_)) + sizeof(unit_type_));
  // @@protoc_insertion_point(copy_constructor:GameMessage)
}

void GameMessage::SharedCtor() {
  ::memset(&grid_path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_type_) -
      reinterpret_cast<char*>(&grid_path_)) + sizeof(unit_type_));
  _cached_size_ = 0;
}

GameMessage::~GameMessage() {
  // @@protoc_insertion_point(destructor:GameMessage)
  SharedDtor();
}

void GameMessage::SharedDtor() {
  if (this != internal_default_instance()) delete grid_path_;
}

void GameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessage::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMessage& GameMessage::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsGameMessage();
  return *internal_default_instance();
}

GameMessage* GameMessage::New(::google::protobuf::Arena* arena) const {
  GameMessage* n = new GameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && grid_path_ != NULL) {
    delete grid_path_;
  }
  grid_path_ = NULL;
  ::memset(&cmd_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_type_) -
      reinterpret_cast<char*>(&cmd_code_)) + sizeof(unit_type_));
  _internal_metadata_.Clear();
}

bool GameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GameMessage.CmdCode cmd_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_code(static_cast< ::GameMessage_CmdCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 damage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GridPath grid_path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_grid_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 camp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage)
  return false;
#undef DO_
}

void GameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMessage.CmdCode cmd_code = 1;
  if (this->cmd_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_code(), output);
  }

  // int32 unit_0 = 2;
  if (this->unit_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unit_0(), output);
  }

  // int32 unit_1 = 3;
  if (this->unit_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit_1(), output);
  }

  // int32 damage = 4;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->damage(), output);
  }

  // .GridPath grid_path = 5;
  if (this->has_grid_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->grid_path_, output);
  }

  // int32 camp = 6;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->camp(), output);
  }

  // int32 unit_type = 7;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->unit_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage)
}

::google::protobuf::uint8* GameMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMessage.CmdCode cmd_code = 1;
  if (this->cmd_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_code(), target);
  }

  // int32 unit_0 = 2;
  if (this->unit_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unit_0(), target);
  }

  // int32 unit_1 = 3;
  if (this->unit_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit_1(), target);
  }

  // int32 damage = 4;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->damage(), target);
  }

  // .GridPath grid_path = 5;
  if (this->has_grid_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->grid_path_, deterministic, target);
  }

  // int32 camp = 6;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->camp(), target);
  }

  // int32 unit_type = 7;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->unit_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage)
  return target;
}

size_t GameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GridPath grid_path = 5;
  if (this->has_grid_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->grid_path_);
  }

  // .GameMessage.CmdCode cmd_code = 1;
  if (this->cmd_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_code());
  }

  // int32 unit_0 = 2;
  if (this->unit_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_0());
  }

  // int32 unit_1 = 3;
  if (this->unit_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_1());
  }

  // int32 damage = 4;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  // int32 camp = 6;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  // int32 unit_type = 7;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage)
    MergeFrom(*source);
  }
}

void GameMessage::MergeFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_grid_path()) {
    mutable_grid_path()->::GridPath::MergeFrom(from.grid_path());
  }
  if (from.cmd_code() != 0) {
    set_cmd_code(from.cmd_code());
  }
  if (from.unit_0() != 0) {
    set_unit_0(from.unit_0());
  }
  if (from.unit_1() != 0) {
    set_unit_1(from.unit_1());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
}

void GameMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessage::CopyFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMessage::IsInitialized() const {
  return true;
}

void GameMessage::Swap(GameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessage::InternalSwap(GameMessage* other) {
  using std::swap;
  swap(grid_path_, other->grid_path_);
  swap(cmd_code_, other->cmd_code_);
  swap(unit_0_, other->unit_0_);
  swap(unit_1_, other->unit_1_);
  swap(damage_, other->damage_);
  swap(camp_, other->camp_);
  swap(unit_type_, other->unit_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessage::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GridPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GridPoint::kXFieldNumber;
const int GridPoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GridPoint::GridPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsGridPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GridPoint)
}
GridPoint::GridPoint(const GridPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:GridPoint)
}

void GridPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

GridPoint::~GridPoint() {
  // @@protoc_insertion_point(destructor:GridPoint)
  SharedDtor();
}

void GridPoint::SharedDtor() {
}

void GridPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GridPoint::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GridPoint& GridPoint::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsGridPoint();
  return *internal_default_instance();
}

GridPoint* GridPoint::New(::google::protobuf::Arena* arena) const {
  GridPoint* n = new GridPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GridPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool GridPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GridPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GridPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GridPoint)
  return false;
#undef DO_
}

void GridPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GridPoint)
}

::google::protobuf::uint8* GridPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GridPoint)
  return target;
}

size_t GridPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GridPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GridPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GridPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GridPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GridPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GridPoint)
    MergeFrom(*source);
  }
}

void GridPoint::MergeFrom(const GridPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GridPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void GridPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GridPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPoint::CopyFrom(const GridPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GridPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPoint::IsInitialized() const {
  return true;
}

void GridPoint::Swap(GridPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GridPoint::InternalSwap(GridPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GridPoint::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GridPath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GridPath::kGridPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GridPath::GridPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsGridPath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GridPath)
}
GridPath::GridPath(const GridPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grid_point_(from.grid_point_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GridPath)
}

void GridPath::SharedCtor() {
  _cached_size_ = 0;
}

GridPath::~GridPath() {
  // @@protoc_insertion_point(destructor:GridPath)
  SharedDtor();
}

void GridPath::SharedDtor() {
}

void GridPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GridPath::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GridPath& GridPath::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsGridPath();
  return *internal_default_instance();
}

GridPath* GridPath::New(::google::protobuf::Arena* arena) const {
  GridPath* n = new GridPath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GridPath::Clear() {
// @@protoc_insertion_point(message_clear_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grid_point_.Clear();
  _internal_metadata_.Clear();
}

bool GridPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GridPath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GridPoint grid_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_grid_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GridPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GridPath)
  return false;
#undef DO_
}

void GridPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GridPoint grid_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grid_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->grid_point(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GridPath)
}

::google::protobuf::uint8* GridPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GridPoint grid_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grid_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->grid_point(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GridPath)
  return target;
}

size_t GridPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GridPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GridPoint grid_point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->grid_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->grid_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GridPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GridPath)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GridPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GridPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GridPath)
    MergeFrom(*source);
  }
}

void GridPath::MergeFrom(const GridPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GridPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grid_point_.MergeFrom(from.grid_point_);
}

void GridPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GridPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPath::CopyFrom(const GridPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GridPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPath::IsInitialized() const {
  return true;
}

void GridPath::Swap(GridPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GridPath::InternalSwap(GridPath* other) {
  using std::swap;
  grid_point_.InternalSwap(&other->grid_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GridPath::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameMessageSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessageSet::kGameMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessageSet::GameMessageSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsGameMessageSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessageSet)
}
GameMessageSet::GameMessageSet(const GameMessageSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      game_message_(from.game_message_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GameMessageSet)
}

void GameMessageSet::SharedCtor() {
  _cached_size_ = 0;
}

GameMessageSet::~GameMessageSet() {
  // @@protoc_insertion_point(destructor:GameMessageSet)
  SharedDtor();
}

void GameMessageSet::SharedDtor() {
}

void GameMessageSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessageSet::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMessageSet& GameMessageSet::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsGameMessageSet();
  return *internal_default_instance();
}

GameMessageSet* GameMessageSet::New(::google::protobuf::Arena* arena) const {
  GameMessageSet* n = new GameMessageSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessageSet::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessageSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_message_.Clear();
  _internal_metadata_.Clear();
}

bool GameMessageSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessageSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GameMessage game_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_game_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessageSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessageSet)
  return false;
#undef DO_
}

void GameMessageSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessageSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMessage game_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->game_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->game_message(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessageSet)
}

::google::protobuf::uint8* GameMessageSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessageSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMessage game_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->game_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->game_message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessageSet)
  return target;
}

size_t GameMessageSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessageSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GameMessage game_message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->game_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->game_message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessageSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessageSet)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMessageSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessageSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessageSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessageSet)
    MergeFrom(*source);
  }
}

void GameMessageSet::MergeFrom(const GameMessageSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessageSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_message_.MergeFrom(from.game_message_);
}

void GameMessageSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessageSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessageSet::CopyFrom(const GameMessageSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessageSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMessageSet::IsInitialized() const {
  return true;
}

void GameMessageSet::Swap(GameMessageSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessageSet::InternalSwap(GameMessageSet* other) {
  using std::swap;
  game_message_.InternalSwap(&other->game_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessageSet::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
